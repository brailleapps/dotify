<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns="http://www.daisy.org/ns/2011/obfl"
	xmlns:obfl="http://www.daisy.org/ns/2011/obfl"
	xmlns:dotify="http://brailleapps.github.io/ns/dotify"
	exclude-result-prefixes="obfl dotify">

	<xsl:import href="dtbook_table_grid.xsl"/>
	<xsl:param name="rowspanName" select="'row-span'" as="xs:string"/>
	<xsl:param name="colspanName" select="'col-span'" as="xs:string"/>
	
	<xsl:template match="node()">
		<xsl:copy>
			<xsl:copy-of select="@*"/>
			<xsl:apply-templates/>
		</xsl:copy>
	</xsl:template>
	
	<xsl:template match="dotify:node">
		<xml-processor-result>
			<xsl:apply-templates/>
		</xml-processor-result>
	</xsl:template>
	
	<xsl:template match="obfl:table">
		<xsl:variable name="grid">
			<xsl:apply-templates select="." mode="makeGrid"/>
		</xsl:variable>
		<xsl:variable name="sortedGrid">
			<xsl:for-each select="$grid/cell">
				<xsl:sort select="@row"/>
				<xsl:sort select="@col"/>
				<xsl:copy-of select="."/>
			</xsl:for-each>
		</xsl:variable>
		<block>
			<xsl:apply-templates select="$sortedGrid/cell[@col=1]">
				<xsl:with-param name="table" select="."/>
			</xsl:apply-templates>
		</block>
	</xsl:template>

	<xsl:template match="cell[@col=1]">
		<xsl:param name="table" required="yes"/>
		<block>
			<xsl:call-template name="copyCell">
				<xsl:with-param name="cell" select="."/>
				<xsl:with-param name="table" select="$table"/>
			</xsl:call-template>
			<xsl:variable name="cr" select="@row"/>
			<xsl:apply-templates select="following-sibling::cell[@row=$cr][1]" mode="thisRow">
				<xsl:with-param name="table" select="$table"/>
			</xsl:apply-templates>
		</block>
	</xsl:template>

	<xsl:template match="cell[@col!=1]" mode="thisRow">
		<xsl:param name="table" required="yes"/>
		<block margin-left="2">
			<xsl:call-template name="copyCell">
				<xsl:with-param name="cell" select="."/>
				<xsl:with-param name="table" select="$table"/>
			</xsl:call-template>
			<xsl:apply-templates select="following-sibling::cell[1]" mode="thisRow">
				<xsl:with-param name="table" select="$table"/>
			</xsl:apply-templates>
		</block>
	</xsl:template>
	
	<xsl:template name="copyCell">
		<xsl:param name="cell" required="yes"/>
		<xsl:param name="table" required="yes"/>
		<!-- Only copy contents once, otherwise leave empty -->
		<xsl:if test="$cell/@col-offset=0 and $cell/@row-offset=0">
			<xsl:variable name="node" select="$table//*[generate-id()=$cell/@id]"/>
			<xsl:if test="count($node)!=1">Error in stylesheet.</xsl:if>
			<xsl:copy-of select="$node/node()"/>
			<xsl:if test="count($node/node())=0">&#x2014;</xsl:if>
		</xsl:if>
	</xsl:template>
	
</xsl:stylesheet>